kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: ycni
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - list
      - watch
      - patch
  - apiGroups:
      - ""
    resources:
      - nodes/status
    verbs:
      - patch
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: ycni
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ycni
subjects:
  - kind: ServiceAccount
    name: ycni
    namespace: kube-system
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: ycni
  namespace: kube-system
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: ycni
  namespace: kube-system
  labels:
    app: ycni
spec:
  selector:
    matchLabels:
      app: ycni
  template:
    metadata:
      labels:
        app: ycni
    spec:
      serviceAccountName: ycni
      hostNetwork: true
      # 应该是为了master也支持调度，错误，无效
      tolerations:
        - operator: Exists
          effect: NoSchedule
      containers:
        - name: ycni
          # 不加下面会在添加网卡的时候报错没有权限
          securityContext:
            privileged: false
            capabilities:
              add: [ "NET_ADMIN", "NET_RAW" ]
          image: 1124645485/ycni:v1
          imagePullPolicy: Always
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          volumeMounts:
            - mountPath: /etc/cni/net.d
              name: ycni-conf
            - mountPath: /etc/kubernetes
              name: kube-conf
            - mountPath: /var/lib/kubelet
              name: var
      volumes:
        - name: ycni-conf
          hostPath:
            path: /etc/cni/net.d
        - name: kube-conf
          hostPath:
            path: /etc/kubernetes
        - name: var
          hostPath:
            path: /var/lib/kubelet
